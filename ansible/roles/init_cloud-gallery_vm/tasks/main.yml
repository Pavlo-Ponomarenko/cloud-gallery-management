---
- name: Install Python3
  yum:
    name: python3
    state: present

- name: Install pip
  yum:
    name: pip
    state: present

- name: Install Amazon CloudWatch Agent
  yum:
    name: amazon-cloudwatch-agent
    state: present

- name: Enable and start amazon-cloudwatch-agent
  systemd:
    name: amazon-cloudwatch-agent
    enabled: yes
    state: started

- name: Install Amazon EFS utils
  yum:
    name: amazon-efs-utils
    state: present

- name: Install crond
  yum:
    name: cronie
    state: present

- name: Enable and start crond
  systemd:
    name: crond
    enabled: yes
    state: started

- name: Install flask
  pip:
    name: flask
    executable: pip3

- name: Install boto3
  pip:
    name: boto3
    executable: pip3

- name: Install git
  yum:
    name: git
    state: present

- name: Clone cloud-gallery repo
  git:
    repo: https://github.com/Pavlo-Ponomarenko/cloud-gallery.git
    dest: /cloud-gallery
    version: main

- name: Create logs dir
  file:
    path: /cloud-gallery/logs
    state: directory

- name: Get EFS ID by tag
  community.aws.efs_info:
    region: eu-central-1
    tags:
      Name: main_efs
  register: efs_result

- name: Set EFS ID variable
  set_fact:
    efs_id: "{{ efs_result.efs[0].file_system_id }}"

- name: Mount EFS to /logs
  ansible.builtin.mount:
    src: "{{ efs_id }}:/"
    path: /cloud-gallery/logs
    fstype: efs
    opts: tls
    state: mounted

- name: Start cloud-gallery app
  shell: |
    nohup python3 -m flask --app App run --host=0.0.0.0 &
  args:
    chdir: /cloud-gallery
    executable: /bin/bash
  environment:
    IMAGES_SOURCE: s3

- name: Create backup_logs.sh
  copy:
    dest: /backup_logs.sh
    content: |
      BASE_DIR="/cloud-gallery"
      LOGS_DIR="$BASE_DIR/logs"
      file=$(find "$LOGS_DIR" -maxdepth 1 -type f -name 'latest*' | head -n 1)
      if [[ -n "$file" ]]; then
        base_name=$(basename "$file")
        new_name="archived${base_name#latest}"
        mv "$file" "${LOGS_DIR}/${new_name}"
      fi
      timestamp="$(date "+%Y-%m-%d_%H:%M:%S")"
      cp "$BASE_DIR/app.log" "${LOGS_DIR}/latest_${timestamp}.log"
      echo "" > "$BASE_DIR/app.log"
    mode: '0755'

- name: Create cloudwatch-agent-config.json
  copy:
    dest: /cloudwatch-agent-config.json
    content: |
      {
        "logs": {
          "logs_collected": {
            "files": {
              "collect_list": [
                {
                  "file_path": "/cloud-gallery/app.log",
                  "log_group_name": "cloud-gallery-logs",
                  "log_stream_name": "cloud-gallery-requests"
                }
              ]
            }
          }
        }
      }

- name: Start amazon-cloudwatch-agent
  shell: |
    nohup ./opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl \
      -a fetch-config \
      -m ec2 \
      -c file:/cloudwatch-agent-config.json \
      -s &
  become: true
  args:
    chdir: /
    executable: /bin/bash

- name: Add cron job to run /backup_logs.sh every minute
  cron:
    name: "Backup logs every minute"
    minute: "*"
    hour: "*"
    day: "*"
    month: "*"
    weekday: "*"
    job: "/backup_logs.sh"